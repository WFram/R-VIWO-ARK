// {
//     // Use IntelliSense to learn about possible attributes.
//     // Hover to view descriptions of existing attributes.
//     // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387
//     "version": "0.2.0",
//     "configurations": [
//         {
//             "name": "Python: Current File",
//             "type": "python",
//             "request": "launch",
//             "program": "/home/wfram/interpolation.py",
//             "console": "integratedTerminal"
//         }
//     ]
// }
{
    "version": "0.2.0",
    "configurations": [
        {
            "name": "(gdb) Launch",
            "type": "cppdbg",
            "request": "launch",
            // Resolved by CMake Tools:
            "program": "${command:cmake.launchTargetPath}",
            // "program": "/home/wfram/ORB_SLAM3_VIWO/Examples/Stereo-Inertial-W/stereo_inertial_w_seg_openloris",
            // "program": "/home/wfram/ORB_SLAM3_VIWO/Examples/Stereo/stereo_semantic_openloris",
            "args": ["./Vocabulary/ORBvoc.txt",
            "Examples/RGB-D/TUM3.yaml",
            "/home/wfram/Datasets/rgbd_dataset_freiburg3_walking_halfsphere",
            "/home/wfram/Datasets/rgbd_dataset_freiburg3_walking_halfsphere/associationsSemantic.txt"],
            // "~/Datasets/corridor1-1_5-package/corridor1-1",
            // "corridor1-1"],
            // "~/Datasets/cafe1-1_2-package/cafe1-1",
            // "cafe1-1"],
            // "~/Datasets/market1-1_3-package/market1-2",
            // "market1-2"],
            // "~/Datasets/home1-1_5-package/market1-1",
            // "market1-1"],
            "stopAtEntry": false,
            "cwd": "${workspaceFolder}",
            "environment": [
                {
                    // add the directory where our target was built to the PATHs
                    // it gets resolved by CMake Tools:
                    "name": "PATH",
                    "value": "$PATH:${command:cmake.launchTargetDirectory}"
                },
                {
                    "name": "OTHER_VALUE",
                    "value": "Something something"
                }
            ],
            "externalConsole": false,
            "MIMode": "gdb",
            "setupCommands": [
                {
                    "description": "Enable pretty-printing for gdb",
                    "text": "-enable-pretty-printing",
                    "ignoreFailures": true
                }
            ]
        }
    ]
}